name: Terraform Pipeline

on:
  pull_request:
    paths: ['terraform-code/**']
  push:
    branches: [ dev, main ]
    paths: ['terraform-code/**']
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        type: choice
        options: [staging, production]

permissions:
  id-token: write
  contents: read

concurrency:
  group: tf-${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  terraform:
    name: Terraform (${{ github.event_name == 'workflow_dispatch' && inputs.environment || (github.ref_name == 'main' && 'production' || 'staging') }})
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || (github.ref_name == 'main' && 'production' || 'staging') }}

    env:
      ARM_CLIENT_ID:       ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID:       ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC:        true
      ARM_SKIP_PROVIDER_REGISTRATION: true
      # SKIP_CHECKS: CKV_AZURE_233,CKV_AZURE_237,CKV_AZURE_165,CKV_AZURE_164,CKV_AZURE_166,CKV_AZURE_167,CKV_AZURE_163,CKV_AZURE_109,CKV_AZURE_189,CKV2_AZURE_32,CKV_AZURE_4,CKV_AZURE_6,CKV_AZURE_171,CKV_AZURE_168,CKV_AZURE_141,CKV_AZURE_117,CKV_AZURE_116,CKV_AZURE_172,CKV_AZURE_170,CKV_AZURE_226,CKV_AZUR
