name: Build, Scan, Push (ACR + JFrog)

on:
  push:
    branches: [ main, dev ]

permissions:
  id-token: write
  contents: read

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [staging, production]

    env:
      IMAGE_NAME: myapp

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set Environment-Specific Variables
      id: env
      run: |
        if [[ "${{ matrix.environment }}" == "staging" ]]; then
          echo "acr=${{ secrets.STAGING_ACR_LOGIN }}" >> $GITHUB_OUTPUT
        else
          echo "acr=${{ secrets.PROD_ACR_LOGIN }}" >> $GITHUB_OUTPUT
        fi

    - name: Azure Login via OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Login to ACR
      run: az acr login --name ${{ steps.env.outputs.acr }}

    # - name: Login to JFrog
    #   run: echo "${{ secrets.JFROG_PASSWORD }}" | docker login ${{ secrets.JFROG_REGISTRY }} -u ${{ secrets.JFROG_USERNAME }} --password-stdin

    - name: Build Docker Image
      run: |
        docker build -t $IMAGE_NAME:${{ matrix.environment }} .

    - name: Push to ACR
      run: |
        docker tag $IMAGE_NAME:${{ matrix.environment }} ${{ steps.env.outputs.acr }}/$IMAGE_NAME:${{ matrix.environment }}
        docker push ${{ steps.env.outputs.acr }}/$IMAGE_NAME:${{ matrix.environment }}

    # - name: Push to JFrog
    #   run: |
    #     docker tag $IMAGE_NAME:${{ matrix.environment }} ${{ secrets.JFROG_REGISTRY }}/$IMAGE_NAME:${{ matrix.environment }}
    #     docker push ${{ secrets.JFROG_REGISTRY }}/$IMAGE_NAME:${{ matrix.environment }}

    - name: Setup Java for SonarQube Scanner
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./gradlew sonarqube \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=$SONAR_TOKEN
